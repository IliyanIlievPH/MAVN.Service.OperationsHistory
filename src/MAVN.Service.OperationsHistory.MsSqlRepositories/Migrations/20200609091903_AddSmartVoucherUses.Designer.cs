// <auto-generated />
using System;
using MAVN.Service.OperationsHistory.MsSqlRepositories;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MAVN.Service.OperationsHistory.MsSqlRepositories.Migrations
{
    [DbContext(typeof(OperationsHistoryContext))]
    [Migration("20200609091903_AddSmartVoucherUses")]
    partial class AddSmartVoucherUses
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("operation_history")
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MAVN.Service.OperationsHistory.MsSqlRepositories.Entities.BonusCashInEntity", b =>
                {
                    b.Property<string>("TransactionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("transaction_id");

                    b.Property<string>("Amount")
                        .IsRequired()
                        .HasColumnName("amount");

                    b.Property<string>("AssetSymbol")
                        .IsRequired()
                        .HasColumnName("asset");

                    b.Property<string>("BonusType")
                        .IsRequired()
                        .HasColumnName("bonus_type");

                    b.Property<string>("CampaignId")
                        .IsRequired()
                        .HasColumnName("campaign_id");

                    b.Property<string>("ConditionId")
                        .HasColumnName("condition_id");

                    b.Property<string>("ConditionName")
                        .HasColumnName("condition_name");

                    b.Property<string>("CustomerId")
                        .IsRequired()
                        .HasColumnName("customer_id");

                    b.Property<string>("ExternalOperationId")
                        .HasColumnName("external_operation_id");

                    b.Property<string>("LocationCode")
                        .HasColumnName("location_code");

                    b.Property<string>("LocationId")
                        .HasColumnName("location_id");

                    b.Property<string>("PartnerId")
                        .HasColumnName("partner_id");

                    b.Property<string>("ReferralId")
                        .HasColumnName("referral_id");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnName("timestamp");

                    b.HasKey("TransactionId");

                    b.HasIndex("CampaignId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("Timestamp");

                    b.ToTable("bonus_cash_in");
                });

            modelBuilder.Entity("MAVN.Service.OperationsHistory.MsSqlRepositories.Entities.BurnRuleEntity", b =>
                {
                    b.Property<string>("BurnRuleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("burn_rule_id");

                    b.Property<string>("BurnRuleName")
                        .IsRequired()
                        .HasColumnName("burn_rule_name");

                    b.HasKey("BurnRuleId");

                    b.ToTable("burn_rules");
                });

            modelBuilder.Entity("MAVN.Service.OperationsHistory.MsSqlRepositories.Entities.CampaignEntity", b =>
                {
                    b.Property<string>("CampaignId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CampaignName")
                        .IsRequired();

                    b.HasKey("CampaignId");

                    b.ToTable("campaigns");
                });

            modelBuilder.Entity("MAVN.Service.OperationsHistory.MsSqlRepositories.Entities.CustomerTierEntity", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<string>("CustomerId")
                        .IsRequired()
                        .HasColumnName("customer_id")
                        .HasColumnType("char(36)");

                    b.Property<string>("TierId")
                        .IsRequired()
                        .HasColumnName("tier_id")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnName("timestamp");

                    b.HasKey("Id");

                    b.ToTable("tiers_updates");
                });

            modelBuilder.Entity("MAVN.Service.OperationsHistory.MsSqlRepositories.Entities.FeeCollectedOperationEntity", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<string>("AssetSymbol")
                        .IsRequired()
                        .HasColumnName("asset_symbol");

                    b.Property<string>("CustomerId")
                        .IsRequired()
                        .HasColumnName("customer_id");

                    b.Property<string>("Fee")
                        .IsRequired()
                        .HasColumnName("fee");

                    b.Property<int>("Reason")
                        .HasColumnName("reason");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnName("timestamp");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("Timestamp");

                    b.ToTable("fee_collected_operations");
                });

            modelBuilder.Entity("MAVN.Service.OperationsHistory.MsSqlRepositories.Entities.LinkWalletOperationEntity", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<string>("CustomerId")
                        .IsRequired()
                        .HasColumnName("customer_id");

                    b.Property<string>("Direction")
                        .IsRequired()
                        .HasColumnName("direction");

                    b.Property<string>("Fee")
                        .IsRequired()
                        .HasColumnName("fee");

                    b.Property<string>("PrivateAddress")
                        .IsRequired()
                        .HasColumnName("private_address");

                    b.Property<string>("PublicAddress")
                        .HasColumnName("public_address");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnName("timestamp");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("Timestamp");

                    b.ToTable("link_wallet_operations");
                });

            modelBuilder.Entity("MAVN.Service.OperationsHistory.MsSqlRepositories.Entities.LinkedWalletTransferEntity", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<string>("Amount")
                        .IsRequired()
                        .HasColumnName("amount");

                    b.Property<string>("AssetSymbol")
                        .IsRequired()
                        .HasColumnName("asset");

                    b.Property<string>("CustomerId")
                        .IsRequired()
                        .HasColumnName("customer_id");

                    b.Property<int>("Direction")
                        .HasColumnName("direction");

                    b.Property<string>("PrivateAddress")
                        .IsRequired()
                        .HasColumnName("private_address");

                    b.Property<string>("PublicAddress")
                        .IsRequired()
                        .HasColumnName("public_address");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnName("timestamp");

                    b.HasKey("Id");

                    b.ToTable("linked_wallet_transfer");
                });

            modelBuilder.Entity("MAVN.Service.OperationsHistory.MsSqlRepositories.Entities.PartnersPaymentEntity", b =>
                {
                    b.Property<string>("PaymentRequestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("payment_request_id");

                    b.Property<string>("Amount")
                        .IsRequired()
                        .HasColumnName("amount");

                    b.Property<string>("AssetSymbol")
                        .IsRequired()
                        .HasColumnName("asset_symbol");

                    b.Property<string>("CustomerId")
                        .IsRequired()
                        .HasColumnName("customer_id");

                    b.Property<string>("LocationId")
                        .HasColumnName("location_id");

                    b.Property<string>("PartnerId")
                        .IsRequired()
                        .HasColumnName("partner_id");

                    b.Property<string>("PartnerName")
                        .IsRequired()
                        .HasColumnName("partner_name");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnName("timestamp");

                    b.HasKey("PaymentRequestId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("Timestamp");

                    b.ToTable("partners_payments");
                });

            modelBuilder.Entity("MAVN.Service.OperationsHistory.MsSqlRepositories.Entities.PartnersPaymentRefundEntity", b =>
                {
                    b.Property<string>("PaymentRequestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("payment_request_id");

                    b.Property<string>("Amount")
                        .IsRequired()
                        .HasColumnName("amount");

                    b.Property<string>("AssetSymbol")
                        .IsRequired()
                        .HasColumnName("asset_symbol");

                    b.Property<string>("CustomerId")
                        .IsRequired()
                        .HasColumnName("customer_id");

                    b.Property<string>("LocationId")
                        .HasColumnName("location_id");

                    b.Property<string>("PartnerId")
                        .IsRequired()
                        .HasColumnName("partner_id");

                    b.Property<string>("PartnerName")
                        .IsRequired()
                        .HasColumnName("partner_name");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnName("timestamp");

                    b.HasKey("PaymentRequestId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("Timestamp");

                    b.ToTable("refunded_partners_payments");
                });

            modelBuilder.Entity("MAVN.Service.OperationsHistory.MsSqlRepositories.Entities.ReferralStakeEntity", b =>
                {
                    b.Property<string>("ReferralId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("referral_id");

                    b.Property<string>("Amount")
                        .IsRequired()
                        .HasColumnName("amount");

                    b.Property<string>("AssetSymbol")
                        .IsRequired()
                        .HasColumnName("asset");

                    b.Property<string>("CampaignId")
                        .IsRequired()
                        .HasColumnName("campaign_id");

                    b.Property<string>("CustomerId")
                        .IsRequired()
                        .HasColumnName("customer_id");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnName("timestamp");

                    b.HasKey("ReferralId");

                    b.HasIndex("CampaignId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("Timestamp");

                    b.ToTable("referral_stakes");
                });

            modelBuilder.Entity("MAVN.Service.OperationsHistory.MsSqlRepositories.Entities.ReleasedReferralStakeEntity", b =>
                {
                    b.Property<string>("ReferralId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("referral_id");

                    b.Property<string>("Amount")
                        .IsRequired()
                        .HasColumnName("amount");

                    b.Property<string>("AssetSymbol")
                        .IsRequired()
                        .HasColumnName("asset");

                    b.Property<string>("CampaignId")
                        .IsRequired()
                        .HasColumnName("campaign_id");

                    b.Property<string>("CustomerId")
                        .IsRequired()
                        .HasColumnName("customer_id");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnName("timestamp");

                    b.HasKey("ReferralId");

                    b.HasIndex("CampaignId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("Timestamp");

                    b.ToTable("released_referral_stakes");
                });

            modelBuilder.Entity("MAVN.Service.OperationsHistory.MsSqlRepositories.Entities.SmartVoucherPaymentEntity", b =>
                {
                    b.Property<string>("PaymentRequestId")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("Amount");

                    b.Property<string>("AssetSymbol")
                        .IsRequired();

                    b.Property<Guid>("CampaignId");

                    b.Property<Guid>("CustomerId");

                    b.Property<Guid>("PartnerId");

                    b.Property<string>("ShortCode")
                        .IsRequired();

                    b.Property<DateTime>("Timestamp");

                    b.HasKey("PaymentRequestId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("Timestamp");

                    b.ToTable("smart_voucher_payments");
                });

            modelBuilder.Entity("MAVN.Service.OperationsHistory.MsSqlRepositories.Entities.SmartVoucherUseEntity", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<decimal>("Amount")
                        .HasColumnName("amount");

                    b.Property<string>("AssetSymbol")
                        .IsRequired()
                        .HasColumnName("asset_symbol");

                    b.Property<Guid>("CampaignId")
                        .HasColumnName("campaign_id");

                    b.Property<Guid>("CustomerId")
                        .HasColumnName("customer_id");

                    b.Property<Guid?>("LinkedCustomerId")
                        .HasColumnName("linked_customer_id");

                    b.Property<Guid?>("LocationId")
                        .HasColumnName("location_id");

                    b.Property<Guid>("PartnerId")
                        .HasColumnName("partner_id");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnName("timestamp");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("Timestamp");

                    b.ToTable("smart_voucher_uses");
                });

            modelBuilder.Entity("MAVN.Service.OperationsHistory.MsSqlRepositories.Entities.TransactionHistoryEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AssetSymbol")
                        .IsRequired()
                        .HasColumnName("asset");

                    b.Property<string>("CustomerId")
                        .IsRequired()
                        .HasColumnName("customer_id");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnName("timestamp");

                    b.Property<string>("TransactionId")
                        .IsRequired()
                        .HasColumnName("transaction_id");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnName("type");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("Timestamp");

                    b.HasIndex("TransactionId");

                    b.ToTable("transaction_history");
                });

            modelBuilder.Entity("MAVN.Service.OperationsHistory.MsSqlRepositories.Entities.TransferEntity", b =>
                {
                    b.Property<string>("TransactionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("transaction_id");

                    b.Property<string>("Amount")
                        .IsRequired()
                        .HasColumnName("amount");

                    b.Property<string>("AssetSymbol")
                        .IsRequired()
                        .HasColumnName("asset");

                    b.Property<string>("ExternalOperationId")
                        .HasColumnName("external_operation_id");

                    b.Property<string>("ReceiverCustomerId")
                        .IsRequired()
                        .HasColumnName("receiver_id");

                    b.Property<string>("ReceiverWalletAddress")
                        .IsRequired()
                        .HasColumnName("receiver_wallet_address");

                    b.Property<string>("SenderCustomerId")
                        .IsRequired()
                        .HasColumnName("sender_id");

                    b.Property<string>("SenderWalletAddress")
                        .IsRequired()
                        .HasColumnName("sender_wallet_address");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnName("timestamp");

                    b.HasKey("TransactionId");

                    b.HasIndex("ReceiverCustomerId");

                    b.HasIndex("SenderCustomerId");

                    b.ToTable("transfer");
                });

            modelBuilder.Entity("MAVN.Service.OperationsHistory.MsSqlRepositories.Entities.VoucherPurchasePaymentEntity", b =>
                {
                    b.Property<Guid>("TransferId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("transfer_id");

                    b.Property<string>("Amount")
                        .IsRequired()
                        .HasColumnName("amount");

                    b.Property<string>("AssetSymbol")
                        .IsRequired()
                        .HasColumnName("asset_symbol")
                        .HasColumnType("varchar(10)");

                    b.Property<Guid>("CustomerId")
                        .HasColumnName("customer_id");

                    b.Property<Guid>("SpendRuleId")
                        .HasColumnName("spend_rule_id");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnName("timestamp");

                    b.Property<Guid>("VoucherId")
                        .HasColumnName("voucher_id");

                    b.HasKey("TransferId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("Timestamp");

                    b.ToTable("voucher_purchase_payments");
                });

            modelBuilder.Entity("MAVN.Service.OperationsHistory.MsSqlRepositories.Entities.BonusCashInEntity", b =>
                {
                    b.HasOne("MAVN.Service.OperationsHistory.MsSqlRepositories.Entities.CampaignEntity", "Campaign")
                        .WithMany()
                        .HasForeignKey("CampaignId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MAVN.Service.OperationsHistory.MsSqlRepositories.Entities.ReferralStakeEntity", b =>
                {
                    b.HasOne("MAVN.Service.OperationsHistory.MsSqlRepositories.Entities.CampaignEntity", "Campaign")
                        .WithMany()
                        .HasForeignKey("CampaignId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MAVN.Service.OperationsHistory.MsSqlRepositories.Entities.ReleasedReferralStakeEntity", b =>
                {
                    b.HasOne("MAVN.Service.OperationsHistory.MsSqlRepositories.Entities.CampaignEntity", "Campaign")
                        .WithMany()
                        .HasForeignKey("CampaignId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
